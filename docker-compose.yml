# Define versão do projeto
version: '3.8'

# Define o nome do projeto
name: Adopet-me

services:
  # ==========================================================
  # SERVIÇO: Banco de Dados PostgreSQL
  # ==========================================================
  db:
    image: postgres:15
    container_name: adopetme_postgres
    restart: unless-stopped
    environment:
      # Usa as variáveis do arquivo .env para criar o banco
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      # Mapeia a porta 5433 da sua máquina para a 5432 do container
      - "5433:5432"
    volumes:
      # Garante que os dados do banco não sejam perdidos
      - postgres_data:/var/lib/postgresql/data

  # ==========================================================
  # SERVIÇO: Backend Spring Boot
  # ==========================================================
  backend:
    build:
      context: ./adopetme-monolitic-backend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - db # Garante que o container do banco inicie antes do backend
    environment:
      - SERVER_PORT=8081
      
      # --- Configuração do Banco de Dados para o Spring ---
      # URL de conexão completa (hostname 'db' é o nome do serviço)
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      
      # --- Configuração do JPA/Hibernate ---
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      
      # MUDANÇA CRÍTICA: 'validate' é o correto ao usar Flyway
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate

    restart: always

  # ==========================================================
  # SERVIÇO: Frontend
  # ==========================================================
  frontend:
    build:
      context: ./adopetme-frontend
      dockerfile: Dockerfile
    ports:
      - "3030:80"
    depends_on:
      - backend
    restart: always

# ==========================================================
# Volume de dados para o banco
# ==========================================================
volumes:
  postgres_data:

