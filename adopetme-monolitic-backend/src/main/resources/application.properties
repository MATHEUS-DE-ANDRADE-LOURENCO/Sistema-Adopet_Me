# -----------------------------------------------
# CONFIGURAÇÕES BÁSICAS
# -----------------------------------------------
spring.application.name=adopetme-monolitic-backend
server.port=8081
spring.docker.compose.enabled=false
logging.level.root=info

# -----------------------------------------------
# CONFIGURAÇÕES DO POSTGRESQL
# -----------------------------------------------
spring.datasource.url=jdbc:postgresql://localhost:5432/adopetme_db
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=senha_do_postgres

# Dialeto do Hibernate para PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Impede que o Hibernate tente criar/dropar tabelas automaticamente
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# -----------------------------------------------
# CONFIGURAÇÕES DO FLYWAY (MIGRATIONS)
# -----------------------------------------------
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# -----------------------------------------------
# CONFIGURAÇÕES DO GOOGLE OAUTH2
# -----------------------------------------------
spring.security.oauth2.client.registration.google.client-id=1075094513599-rqs3icrubl1h5k4rr6o073os4jm6fice.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

# -----------------------------------------------
# CONFIGURAÇÕES PERSONALIZADAS (FRONTEND, CORS E JWT)
# -----------------------------------------------
app.oauth2.authorizedRedirectUris=http://localhost:3030/auth/oauth2/redirect
app.oauth2.allowed-origins=http://localhost:3030

app.jwt.secret=isso-eh-uma-chave-para-o-jwt-que-precisa-ser-muito-grande-a-a-a-a-a-h-h-h-h-h
app.jwt.expiration-in-ms=86400000

spring.jpa.open-in-view=false
