# -----------------------------------------------
# CONFIGURA��ES B�SICAS
# -----------------------------------------------
spring.application.name=adopetme-monolitic-backend
server.port=8081
spring.docker.compose.enabled=false
logging.level.root=info

# -----------------------------------------------
# CONFIGURA��ES DO H2
# -----------------------------------------------
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# habilita o console web do H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# desabilita a verifica��o de seguran�a CORS/CSRF no H2
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# -----------------------------------------------
# CONFIGURA��ES DO GOOGLE OAUTH2
# -----------------------------------------------
spring.security.oauth2.client.registration.google.client-id=1075094513599-rqs3icrubl1h5k4rr6o073os4jm6fice.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

# -----------------------------------------------
# CONFIGURA��ES PERSONALIZADAS (FRONTEND, CORS E JWT)
# -----------------------------------------------
# URI de redirecionamento final ap�s o login OAuth2 no Spring (volta para o React na porta 3030)
app.oauth2.authorizedRedirectUris=http://localhost:3030/auth/oauth2/redirect

# Origem permitida para requisi��es CORS (mapeada para app.oauth2.allowedOrigins no AppProperties)
app.oauth2.allowed-origins=http://localhost:3030

# Chave secreta para assinar o JWT
app.jwt.secret=isso-eh-uma-chave-para-o-jwt-que-precisa-ser-muito-grande-a-a-a-a-a-h-h-h-h-h

# Nome ajustado para 'app.jwt.expiration-in-ms' para consist�ncia
app.jwt.expiration-in-ms=86400000

spring.jpa.open-in-view=false